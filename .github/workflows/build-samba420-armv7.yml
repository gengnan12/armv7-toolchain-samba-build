name: Build Samba with ARM Official Official Official Toolchain
on:
  workflow_dispatch:

jobs:
  build-samba:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          echo "===== 安装系统依赖 ====="
          sudo apt update -y
          sudo apt install -y python3 python3-dev libssl-dev pkg-config \
                              wget tar xz-utils

      - name: Download ARMv7 toolchain from official site
        run: |
          echo "===== 从ARM官网下载工具链 ====="
          # ARM官网提供的ARMv7 32位工具链（gnueabihf对应硬浮点）
          TOOLCHAIN_URL="https://developer.arm.com/-/media/Files/downloads/gnu-a/12.2.rel1/binrel/arm-gnu-toolchain-12.2.rel1-x86_64-arm-linux-gnueabihf.tar.xz"
          
          # 下载并解压到/opt目录
          wget -q --show-progress -O arm-toolchain.tar.xz $TOOLCHAIN_URL
          sudo mkdir -p /opt/arm-toolchain
          sudo tar -xJf arm-toolchain.tar.xz -C /opt/arm-toolchain --strip-components=1
          
          # 添加工具链到PATH
          echo "/opt/arm-toolchain/bin" >> $GITHUB_PATH
          
          # 验证工具链安装
          arm-linux-gnueabihf-gcc --version || { echo "工具链安装失败"; exit 1; }

      - name: Download Samba source code
        run: |
          echo "===== 下载Samba源码 ====="
          SAMBA_VERSION="4.20.0"
          wget -q --show-progress https://download.samba.org/pub/samba/stable/samba-$SAMBA_VERSION.tar.gz
          tar -xzf samba-$SAMBA_VERSION.tar.gz
          cd samba-$SAMBA_VERSION
          # 验证源码完整性
          ./configure --version > /dev/null || { echo "Samba源码损坏"; exit 1; }

      - name: Configure Samba for ARMv7
        run: |
          echo "===== 配置Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION
          
          # 使用ARM工具链交叉编译配置
          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/usr \
            --sysconfdir=/etc/samba \
            --localstatedir=/var \
            --with-privatedir=/var/lib/samba/private \
            --disable-python \
            --without-ldap \
            --without-ad-dc \
            --with-systemd=no \
            --without-winbind \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os" \
            LDFLAGS="-static-libgcc -static-libstdc++"

      - name: Compile Samba
        run: |
          echo "===== 编译Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION
          # 使用2线程编译（避免内存溢出）
          make smbd -j2 V=1
          make nmbd -j2 V=1
          make smbpasswd -j2 V=1

      - name: Verify compiled binaries
        run: |
          echo "===== 验证编译结果 ====="
          SAMBA_VERSION="4.20.0"
          file samba-$SAMBA_VERSION/bin/smbd | grep "ARM" || { echo "未生成ARM架构二进制文件"; exit 1; }
          file samba-$SAMBA_VERSION/bin/nmbd | grep "ARM" || { echo "未生成ARM架构二进制文件"; exit 1; }

      - name: Upload Samba binaries
        uses: actions/upload-artifact@v4
        with:
          name: samba420-armv7-binaries
          path: |
            samba-4.20.0/bin/smbd
            samba-4.20.0/bin/nmbd
            samba-4.20.0/bin/smbpasswd
          retention-days: 30
