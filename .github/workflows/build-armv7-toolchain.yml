name: Build Samba with System ARM Toolchain (Fix Permission Error)
on:
  workflow_dispatch:

jobs:
  build-samba:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix sources.list and enable multi-arch (修复权限问题)
        run: |
          echo "===== 修复源配置并启用多架构 ====="
          # 关键修复：使用sudo确保有足够权限操作sources.list
          sudo sh -c '
            # 备份原有源
            mv /etc/apt/sources.list /etc/apt/sources.list.bak
            # 写入Focal LTS源配置（支持armhf）
            cat > /etc/apt/sources.list << EOF
            deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
            deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
            deb [arch=amd64,armhf] http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
            deb [arch=amd64,armhf] http://security.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
            EOF
          '

          # 启用armhf架构支持
          sudo dpkg --add-architecture armhf
          
          # 更新源
          sudo apt update -y --allow-insecure-repositories

      - name: Install dependencies (ARM + x86)
        run: |
          echo "===== 安装依赖 ====="
          sudo apt install -y -f \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            crossbuild-essential-armhf \
            libssl-dev:armhf zlib1g-dev:armhf libidn2-0-dev:armhf \
            libtasn1-6-dev:armhf libnettle8:armhf libhogweed6:armhf \
            python3 python3-dev pkg-config wget tar xz-utils make

          arm-linux-gnueabihf-gcc --version || { echo "ARM工具链安装失败"; exit 1; }

      - name: Cross-compile GnuTLS for ARMv7
        run: |
          echo "===== 交叉编译ARM版GnuTLS ====="
          GNUTLS_VERSION="3.7.9"
          GNUTLS_URL="https://www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-$GNUTLS_VERSION.tar.xz"
          
          wget -q --show-progress -O gnutls.tar.xz "$GNUTLS_URL"
          tar -xJf gnutls.tar.xz
          cd gnutls-$GNUTLS_VERSION

          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/opt/arm-gnutls \
            --disable-doc --disable-tests \
            --enable-shared --without-p11-kit \
            --with-zlib --with-idn2 \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os" \
            LDFLAGS="-static-libgcc"

          make -j2
          sudo make install

          if [ ! -f "/opt/arm-gnutls/lib/libgnutls.so" ]; then
            echo "GnuTLS交叉编译失败"
            exit 1
          fi

      - name: Download Samba source code
        run: |
          echo "===== 下载Samba源码 ====="
          SAMBA_VERSION="4.20.0"
          SAMBA_URL="https://download.samba.org/pub/samba/stable/samba-$SAMBA_VERSION.tar.gz"
          
          wget -q --show-progress -O samba.tar.gz "$SAMBA_URL"
          tar -xzf samba.tar.gz
          cd samba-$SAMBA_VERSION
          ./configure --version > /dev/null || { echo "Samba源码损坏"; exit 1; }

      - name: Configure Samba with ARM GnuTLS
        run: |
          echo "===== 配置Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION

          export PKG_CONFIG_PATH="/opt/arm-gnutls/lib/pkgconfig:/usr/lib/arm-linux-gnueabihf/pkgconfig:$PKG_CONFIG_PATH"
          export LD_LIBRARY_PATH="/opt/arm-gnutls/lib:$LD_LIBRARY_PATH"

          ./configure \
            --enable-fhs \
            --host=arm-linux-gnueabihf \
            --prefix=/usr \
            --sysconfdir=/etc/samba \
            --localstatedir=/var \
            --with-privatedir=/var/lib/samba/private \
            --disable-python --without-ldap --without-ad-dc \
            --without-systemd --without-winbind \
            --with-gnutls=/opt/arm-gnutls \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -I/opt/arm-gnutls/include" \
            LDFLAGS="-L/opt/arm-gnutls/lib -static-libgcc -static-libstdc++"

      - name: Compile Samba
        run: |
          echo "===== 编译Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION
          make smbd -j2 V=1
          make nmbd -j2 V=1
          make smbpasswd -j2 V=1

      - name: Verify compiled binaries
        run: |
          echo "===== 验证编译结果 ====="
          SAMBA_VERSION="4.20.0"
          file samba-$SAMBA_VERSION/bin/smbd | grep -E "ARM|arm" || { echo "smbd非ARM架构"; exit 1; }
          arm-linux-gnueabihf-readelf -d samba-$SAMBA_VERSION/bin/smbd | grep "libgnutls" || { echo "smbd未链接GnuTLS"; exit 1; }

      - name: Upload Samba binaries
        uses: actions/upload-artifact@v4
        with:
          name: samba420-armv7-binaries
          path: |
            samba-4.20.0/bin/smbd
            samba-4.20.0/bin/nmbd
            samba-4.20.0/bin/smbpasswd
          retention-days: 30
