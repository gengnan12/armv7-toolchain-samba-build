name: Build Samba with System ARM Toolchain (Fix Version Syntax)
on:
  workflow_dispatch:

jobs:
  build-samba:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure split-architecture sources
        run: |
          echo "===== 配置分离架构源 ====="
          # amd64架构源（主机）
          sudo tee /etc/apt/sources.list.d/amd64.list > /dev/null << 'EOF'
          deb http://archive.ubuntu.com/ubuntu/ noble main restricted universe multiverse
          deb http://archive.ubuntu.com/ubuntu/ noble-updates main restricted universe multiverse
          EOF

          # armhf架构源（目标）
          sudo tee /etc/apt/sources.list.d/armhf.list > /dev/null << 'EOF'
          deb [arch=armhf] http://mirrors.aliyun.com/ubuntu-ports/ focal main restricted universe multiverse
          deb [arch=armhf] http://mirrors.aliyun.com/ubuntu-ports/ focal-updates main restricted universe multiverse
          EOF

          # 启用armhf架构
          sudo dpkg --add-architecture armhf
          
          # 更新源并忽略错误
          sudo apt update -y || true

      - name: Install base dependencies with correct version syntax
        run: |
          echo "===== 安装基础依赖（修复版本语法） ====="
          # 修复版本指定语法，使用apt的版本匹配格式
          sudo apt install -y -f \
            # 主机架构依赖（正确的版本指定方式）
            "python3=3.12.*" "python3-dev=3.12.*" \
            # ARM架构依赖（指定兼容版本）
            "libc6:armhf=2.31-0ubuntu9.9" \
            "libidn2-0:armhf=2.2.0-2ubuntu2" \
            "zlib1g:armhf=1:1.2.11.dfsg-2ubuntu1.5" \
            "libc6-dev:armhf=2.31-0ubuntu9.9" \
            # 交叉编译工具链
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            crossbuild-essential-armhf \
            # 其他必要工具
            pkg-config wget tar xz-utils make

          # 安装剩余ARM开发库
          sudo apt install -y -f \
            libssl-dev:armhf zlib1g-dev:armhf libidn2-0-dev:armhf \
            libtasn1-6-dev:armhf libnettle8:armhf libhogweed6:armhf

          # 验证工具链
          arm-linux-gnueabihf-gcc --version || { echo "ARM工具链安装失败"; exit 1; }

      - name: Cross-compile GnuTLS (独立依赖)
        run: |
          echo "===== 交叉编译GnuTLS ====="
          GNUTLS_VERSION="3.7.9"
          wget -q --show-progress "https://www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-$GNUTLS_VERSION.tar.xz"
          tar -xJf gnutls-$GNUTLS_VERSION.tar.xz
          cd gnutls-$GNUTLS_VERSION

          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/opt/arm-gnutls \
            --disable-doc --disable-tests \
            --enable-shared --without-p11-kit \
            --with-zlib --with-idn2 \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os" \
            LDFLAGS="-static-libgcc"

          make -j2
          sudo make install

          [ -f "/opt/arm-gnutls/lib/libgnutls.so" ] || { echo "GnuTLS编译失败"; exit 1; }

      - name: Download Samba source
        run: |
          echo "===== 下载Samba源码 ====="
          SAMBA_VERSION="4.20.0"
          wget -q --show-progress "https://download.samba.org/pub/samba/stable/samba-$SAMBA_VERSION.tar.gz"
          tar -xzf samba-$SAMBA_VERSION.tar.gz
          cd samba-$SAMBA_VERSION
          ./configure --version > /dev/null || { echo "Samba源码损坏"; exit 1; }

      - name: Configure Samba
        run: |
          echo "===== 配置Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION

          export PKG_CONFIG_PATH="/opt/arm-gnutls/lib/pkgconfig:/usr/lib/arm-linux-gnueabihf/pkgconfig"
          export LD_LIBRARY_PATH="/opt/arm-gnutls/lib"

          ./configure \
            --enable-fhs \
            --host=arm-linux-gnueabihf \
            --prefix=/usr \
            --sysconfdir=/etc/samba \
            --localstatedir=/var \
            --with-privatedir=/var/lib/samba/private \
            --disable-python --without-ldap --without-ad-dc \
            --without-systemd --without-winbind \
            --with-gnutls=/opt/arm-gnutls \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -I/opt/arm-gnutls/include" \
            LDFLAGS="-L/opt/arm-gnutls/lib -static-libgcc -static-libstdc++"

      - name: Compile Samba
        run: |
          echo "===== 编译Samba ====="
          SAMBA_VERSION="4.20.0"
          cd samba-$SAMBA_VERSION
          make smbd -j2 V=1
          make nmbd -j2 V=1
          make smbpasswd -j2 V=1

      - name: Verify binaries
        run: |
          echo "===== 验证二进制文件 ====="
          SAMBA_VERSION="4.20.0"
          file samba-$SAMBA_VERSION/bin/smbd | grep "ARM" || { echo "非ARM架构"; exit 1; }
          arm-linux-gnueabihf-readelf -d samba-$SAMBA_VERSION/bin/smbd | grep "libgnutls" || { echo "未链接GnuTLS"; exit 1; }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: samba420-armv7-binaries
          path: |
            samba-4.20.0/bin/smbd
            samba-4.20.0/bin/nmbd
            samba-4.20.0/bin/smbpasswd
          retention-days: 30
